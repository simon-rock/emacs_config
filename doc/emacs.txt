1) Buffer相关。emacs可以同时打开多个文件，每一个文件是一个buffer。
  在X下可以用C-mouse1来选择当前活动哪个buffer
  C-x C-b  可以得到一个buffer列表并从中选择哪个buffer打开
  C-x C-f  打开一个文件
  C-x i  在打开的buffer中插入一个文件内容
  C-x k  关闭当前buffer中的文件
  C-x C-s  保存当前buffer
  C-x C-w 另存为
  C-x s  保存所有buffer
2) 屏幕分割相关，emacs可以在同一个窗口中看到多个buffer。
  C-x 2  垂直分割当前子窗口
  C-x 3 水平分割当前子窗口
  C-x 1 当前窗口独占窗口空间
  C-x o 活动子窗口切换到另外一个子窗口
  C-x 0 关闭当前窗口
3)编辑相关
  插入/覆盖模式切换
      M-x overwrite-mode是用来转换 insert mode 与 overwrite mode
      重复操作：数值引数适用於所有 EMACS 的指令。它的用途可分成 以下数类：
        * 对某一指令做重复执行的动作
        * 用法： C-u n command 或 M- n command
      如：C-u 4 r 在buffer中输入4个r
          C-u 4 C-u 5 在buffer中输入4个5（重复输入数字要注意有两个C-u）
      删除－deletion
      C-d 向后删除一个字元
      删除－killing（剪切）
      要查看kill-ring中的内容  1. 键入 ``Ctrl-h v'' 後， echo area 处会出现：
                             2. 在Describevariable:後输入变数的名称， EMACS 会另开一个视窗来显示此变数的值。此时所要键入的变数名为 ``kill-ring''
      C-k 删除（剪切）一行
      C-x C-o 删除（剪切）光标所在位置后面的空白行
      M-Delete      剪切光标前面的单词
      M-k           剪切从光标位置到句尾的内容
      M-d           剪切光标前面的单词
      C-y
      C-k           剪切从光标位置到行尾的内容
      C-x u         撤销操作(先操作C-x，接着再单击u)
  拷贝与粘贴
    区域标记：设定区块的步骤如下所示：
    1. 设定区块的始位置，也就是所谓的标记（ mark）。
    2. 可使用 `` Ctrl-@'' 或 `` Ctrl-SPC''或M-x set-mark-command任一个指令来设定标记。
    3. 设定区块的终结位置，也就是移动游标至区块的尾端。
    在标记与 point之间的范围就是所谓的区块。
    M-@  开始标记区域用于拷贝
    M-w  拷贝当前mark的区域
    C-w 将当前mark的区域剪切到内存
    C-y  在当前位置粘贴剪贴板的内容
    *C-y M-y  即如果在粘贴命令后根一个M-y，则切换剪贴板的内容，可以有多个M-y
    C-x u undo功能(好象没有redo)
    Ctrl-x Ctrl-p（mark-page）
    Ctrl-x Ctrl-l（downcase-region）使区域变成小写
    Ctrl-x Ctrl-u（upcase-region）使区域变成大写
    Meta-x fill-region
    Meta-x print-region
  替换
    M-x replace-string RET 旧字串 RET 新字串 RET（不征询意见）
    M-x query-string RET 旧字串 RET 新字串 RET （征询意见）

5)在线帮助
  Ctrl-h c与 Ctrl-h k'的功能相似， 二者都是在寻求与 Hotkey有关的讯息。二者唯一的差别，就在於对指令的解释详细与否而已。
  C-h a 和C-h w可让使用者键入任意的子字串，都可以找到 相对应的指令。
    使用  Ctrl-h a 所键入的子字串，并不限於指令的第一个字元, 而 Ctrl-h w 则必需以指令的第一个字为起始字。
    使用  Ctrl-h a，可给予指令中任何位置的子字串。Ctrl-h a 无法使用 completion，而 Ctrl-h w可使用 completion。
  C-h i 活着M-x info查看帮助info
  d  运行Ctrl-h i 指令，会先进入 info 树状结构的根部。任何情况下， 可键入 ``d'' 回到此根部
  m MenuName 直接移动到指定的Menu上
  n 将结点移至下一个与此结点相连的结点。
  p 将结点移至上一个与此结点相连的结点。
  u 将结点移至上一层的结点。

6)书签
C-x r m 添加书签
C-x r b 跳到某个书签
M-x list-bookmarks 显示所有书签，在里面d标记删除，u取消，r重命名，x执行操作
要想保存书签，可以修改.emacs文件，在里面添加如下内容
(setq bookmark-save-flag 1)
这会把书签保存到~/.emacs.bmk 

=============================================
			COMMAND
=============================================
M-x woman 的命令可以高亮的察看manpage
M-x info 的命令可以察看man所提供的所有命令并且以层次形式提供

=============================================
书签
C-x r m 添加书签
C-x r b 跳到某个书签
M-x list-bookmarks 显示所有书签，在里面d标记删除，u取消，r重命名，x执行操作   ==》 C+F12
要想保存书签，可以修改.emacs文件，在里面添加如下内容
(setq bookmark-save-flag 1)
这会把书签保存到~/.emacs.bmk 

=============================================
移动
move
C-p C-n C-b C-f
M-f M-b
C-a C-e
M-a M-e

=============================================
搜索，替换
search
C-s         start serch
   M-n M-P  切换搜索历史
   C-w      补全当前词
   C-s C-r  上下搜索
C-M-s C-M-r 前后正则表达式替换查找
C-M-%       正则表达式替换
list search mode
M-x occur RET string RET

replace
M-% ori_string RET replace_string RET
    y replace
    n skip
    ! replace all below the line
    ^ backup last place
    C-r   edit mode
    C-M-c quit edit mode

=============================================
cscope 查看代码
cscope (read xcscope.el)
    C-c s a                     set root dir of code
    C-c s I                     create cscope.out
    C-c s L
    
    C-c s d
    C-c s g(global define)      find function or var define
    C-c s G

    C-c s c(caller)             find the caller
    C-c s C(call function list) find the subfunction in the funciton
    C-c s t(text)               find text string
    C-c s f(file)               find a file
    C-c s i                     find the files #inlcude a file

cscope使用
http://os.chinaunix.net/a2006/0707/963/000000963869.shtml
http://blog.csdn.net/intrepyd/article/details/4202312

=============================================
ibuffer
d delete
u undo
x exec
y yes
S save to filex
t toggle mark
g refresh
http://emacser.com/ann77/Emacs/EmacsIbuffer.html
正则
http://dsec.pku.edu.cn/~rli/WiKi/EmacsRegexp.html
regexp_test.py
occur
http://www.emacswiki.org/emacs/OccurMode
=============================================
dired
m       mark
U       unmark
D       delet
C(c)    copy
R       move
r       进入编辑模式
        C-c C-c 退出编辑模式
+       创建目录
=============================================
Emacs 中的查找
Nonincremental Search
打开文件中查找
使用 moccur 在所有打开的文件内查找
多文件查找
find-grep-dired        ----- 输入目录->过滤字符串"regexstr"(注意引号)
运行外部命令 find，用 grep 过滤文件， ls 产生目录列表，然后进入 dired 模式，这样 列出所有包含某些字符的文件列表。可以使用 dired-do-query-replace-regexp 在文件列 表中查找并替换。可以递归所有子目录。可以用各种条件过滤文件，详细可以查看 find 命 令的帮助。
find-name-dired        ----- 查找指定文件名的文件并进入dired mode

find-dired             ----- 可将find命令的结果生成list并进入dired模式，需要自己配置find 参数
rgrep                  ----- 在制定目录下查找制定字符串，可制定文件后缀

find . -type f -exec rm '{}' \;
find-grep grep-find    -----  包含制定字符串的文件
    find . -type f -exec grep -nH -e  {} NUL ";"
    ==> find . -type f -exec grep -nH -e  {} ";"
        find . -type f -exec grep -nH -e  {} \;

grep                   ----- 当前目录下查找含有指定字符串的文件，可过滤文件名, -r 可迭代查找
grep -nH -e "stirng" *.cpp [-r]  

other command
在当前目录中查找指定的 regexp
                       
也可以定制模板
(require 'grep)  
(grep-apply-setting  
 'grep-find-command  
 '("E:/Tools/Emacs/bin/find.exe . -type f -exec E:/Tools/Emacs/bin/grep.exe -nH -ie  {} NUL \";\"" . 80 ) )  
(grep-apply-setting  
 'grep-command  
 "E:/Tools/Emacs/bin/grep.exe -nH -ie ")  
(grep-apply-setting  
 'grep-find-template  
 "E:/Tools/Emacs/bin/find.exe . <X> -type f <F> -exec E:/Tools/Emacs/bin/grep.exe <C> -nH -ie <R> {} NUL \";\"" )  

use emacs find grep on windows 
http://blog.csdn.net/winterttr/article/details/7348279
find maunal
http://world77.blog.51cto.com/414605/209125
=============================================
other function
C-. C-,   -----临时标记，两点间跳转
C-c a x   -----移动光标到制定字符
browse-kill-ring   ----- 所有的剪切板
desktop-save/clear ----- 保存桌面，清除桌面

=============================================
			RESOURCE
=============================================
http://blog.csdn.net/redguardtoo/article/details/7222501
some importent setting
http://my.oschina.net/alphajay/blog/152599
http://bbs.chinaunix.net/thread-1014134-1-1.html
http://blog.chinaunix.net/uid-20684384-id-1895300.html

http://emacser.com/
http://www.emacswiki.org/

Emacs 编译环境
http://www.ibm.com/developerworks/cn/education/aix/au-emacs7/
用emacs浏览代码一年多的总结
用zjl-hl.el实现Emacs的C语法高亮着色
Emacs Lisp 功能扩展集锦
ecb + semantic实现si显示函数/变量上下文显示功能
怎么使emacs语法高亮 分别配置x11 和终端模式颜色属性

配置eshell
https://linuxtoy.org/archives/emacs-eshell.html
配置git-emacs
配置编译环境
配置代码阅读环境
